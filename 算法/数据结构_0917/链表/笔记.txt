链表：
	特点：
	1、由一个一个的节点组成的，每一个节点的地址并不是连续的（所以不能通过下标法访问）
	2、可以增加节点 删除节点
	
	链表的种类：
	单项链表
	双向链表
	单项循环链表
	双向循环链表

链表的实现：
	节点：
		数据域 data
		指针域 next，保存下一个节点的地址（指向下一个节点）
		class Node:
			def __init__(self, data=None, next=None):
				self.__data = data
				self.__next = next
			def set_data(self, data):
				self.__data = data
			def set_next(self, next):
				self.__next = next
			def get_data(self):
				return self.__data
			def get_next(self):
				return self.__next
	
	单向链表：
		头指针 head，指向链表的第一个节点
		尾指针 tail  指向链表的最后一个节点
		长度   length  
		class LinkList:
			def __init__(self, head=None, tail=None, length=0):
				self.__head = head
				self.__tail = tail
				self.__length = length
			#头插法
			def add(self, data):
				pass
			#尾插法
			def append(self, data):
				pass
			#在指定位置插入一个元素
			def insert_pos(self, pos, data):
				pass
			#在指定位置删除一个元素
			def remove_pos(self, pos, data):
				pass
			#删除指定的元素
			def remove_data(self, data):
				pass
			#判断链表是否为空
			def is_empty(self):
				return self.__head == None
				
			go 网络基础
			R
			lai 